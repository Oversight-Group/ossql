<?xml version="1.0"?>
<doc>
    <assembly>
        <name>OsSql</name>
    </assembly>
    <members>
        <member name="T:OsSql.IOsSqlElement">
            <summary>
            An interface for a class that is being used with OsSql in order to save value in the database.
            </summary>
        </member>
        <member name="M:OsSql.IOsSqlElement.GetID">
            <summary>
            Saves the key value of the current class.
            Mostly this one should return an ID, or AI integer key of data enteries.
            </summary>
            <returns>The key as int.</returns>
        </member>
        <member name="T:OsSql.OsSqlTypes">
            <summary>
            Contains any type that is being used with OsSql.
            </summary>
        </member>
        <member name="T:OsSql.OsSqlTypes.OsSqlException">
            <summary>
            The exception that is thrown when an internal error of OsSql has occured.
            </summary>
        </member>
        <member name="M:OsSql.OsSqlTypes.OsSqlException.#ctor">
            <summary>
            Initializes a new instance of the <c>OsSqlException</c> class.
            </summary>
        </member>
        <member name="M:OsSql.OsSqlTypes.OsSqlException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <c>OsSqlException</c> class with a message.
            </summary>
        </member>
        <member name="M:OsSql.OsSqlTypes.OsSqlException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <c>OsSqlException</c> class with a message and an inner exception.
            </summary>
        </member>
        <member name="T:OsSql.OsSqlTypes.OsSqlSaveAttribute">
            <summary>
            An attribute class for OsSql synchronization with the database.
            Use this attribute on a class which you want to be an SQL element.
            </summary>
        </member>
        <member name="P:OsSql.OsSqlTypes.OsSqlSaveAttribute.DbName">
            <summary>
            The property name within the SQL database.
            </summary>
        </member>
        <member name="P:OsSql.OsSqlTypes.OsSqlSaveAttribute.ColType">
            <summary>
            The property column type.
            </summary>
        </member>
        <member name="P:OsSql.OsSqlTypes.OsSqlSaveAttribute.AutoInc">
            <summary>
            Indicates wether the property will be defined as auto increment.
            </summary>
        </member>
        <member name="M:OsSql.OsSqlTypes.OsSqlSaveAttribute.#ctor(OsSql.OsSqlTypes.ColumnType,System.String,System.Boolean)">
            <summary>
            Specifies the property as synchronized with the database.
            </summary>
            <param name="ColType">The property column type.</param>
            <param name="DbName">The property name within the SQL database.</param>
            <param name="AutoInc">Indicates wether the property will be defined as auto increment.</param>
        </member>
        <member name="M:OsSql.OsSqlTypes.OsSqlSaveAttribute.#ctor(System.String,System.Boolean)">
            <summary>
            Specifies the property as synchronized with the database and finding the column type automatically.
            </summary>
            <param name="DbName">The property name within the SQL database.</param>
            <param name="AutoInc">Indicates if the property will be defined as auto increment.</param>
        </member>
        <member name="T:OsSql.OsSqlTypes.Parameter">
            <summary>
            Handles SQL parameters as key and value.
            </summary>
        </member>
        <member name="F:OsSql.OsSqlTypes.Parameter.Key">
            <summary>
            Column (field) name.
            </summary>
        </member>
        <member name="F:OsSql.OsSqlTypes.Parameter.Value">
            <summary>
            Value to use.
            </summary>
        </member>
        <member name="F:OsSql.OsSqlTypes.Parameter.Func">
            <summary>
            Indicates wether this parameter is being passed with data manipulation queries.
            </summary>
        </member>
        <member name="M:OsSql.OsSqlTypes.Parameter.#ctor(System.String,System.Object,System.Boolean)">
            <summary>
            Initializes a new instance of <c>Parameter</c> with key and value, based on a string key.
            </summary>
            <param name="key">The column (field) name.</param>
            <param name="value">The value to use.</param>
            <param name="function">If this parameter is passed to data manipulation function (like Update() or Insert()), set true to use the function or false to skip this parameter.</param>
        </member>
        <member name="M:OsSql.OsSqlTypes.Parameter.#ctor(OsSql.OsSqlTypes.Table.Column,System.Object,System.Boolean)">
            <summary>
            Initializes a new instance of <c>Parameter</c> with key and value, based on a column object key.
            </summary>
            <param name="key">The column object.</param>
            <param name="value">The value to use.</param>
            <param name="function">If this parameter is passed to data manipulation function (like Update() or Insert()), set true to use the function or false to skip this parameter.</param>
        </member>
        <member name="M:OsSql.OsSqlTypes.Parameter.#ctor(OsSql.OsSqlTypes.Table,System.String,System.Object,System.Boolean)">
            <summary>
            Initializes a new instance of <c>Parameter</c> with key and value, based on key search in a given table.
            </summary>
            <param name="table">The table to search the key in.</param>
            <param name="key">The column (field) name in code (CodeName).</param>
            <param name="value">The value to use.</param>
            <param name="function">If this parameter is passed to data manipulation function (like Update() or Insert()), set true to use the function or false to skip this parameter.</param>
        </member>
        <member name="T:OsSql.OsSqlTypes.Structure">
            <summary>
            Structure class handles database structure of tables.
            </summary>
        </member>
        <member name="F:OsSql.OsSqlTypes.Structure.Tables">
            <summary>
            Represents a list with all database tables and fields settings.
            </summary>
        </member>
        <member name="F:OsSql.OsSqlTypes.Structure.DBName">
            <summary>
            Represents the database name.
            </summary>
        </member>
        <member name="M:OsSql.OsSqlTypes.Structure.#ctor">
            <summary>
            Constructs a new instance of <c>Structure</c> without any tables.
            </summary>
        </member>
        <member name="M:OsSql.OsSqlTypes.Structure.#ctor(System.String,OsSql.OsSqlTypes.Table[])">
            <summary>
            Constructs a new instance of <c>Structure</c> with predefined tables.
            </summary>
            <param name="dbname">Database name.</param>
            <param name="tables">Table instances.</param>
        </member>
        <member name="M:OsSql.OsSqlTypes.Structure.AddTable(System.String)">
            <summary>
            Adds a new table to the database structure.
            </summary>
            <param name="name">Table name.</param>
            <returns>Returns the generated object for adding settings to the table.</returns>
            <remarks>If the table is already exist in the database, its name must be written exactly as it is in the database.</remarks>
        </member>
        <member name="M:OsSql.OsSqlTypes.Structure.GetTable(System.String)">
            <summary>
            Finds a table within the tables by a name of table.
            </summary>
            <param name="name">The exact name of the table.</param>
            <returns>The table of the given name or null if nothing found.</returns>
        </member>
        <member name="T:OsSql.OsSqlTypes.ColumnType">
            <summary>
            Possible types of table values.
            </summary>
        </member>
        <member name="F:OsSql.OsSqlTypes.ColumnType.Int">
            <summary>
            -2147483648 to 2147483647.
            </summary>
        </member>
        <member name="F:OsSql.OsSqlTypes.ColumnType.TinyInt">
            <summary>
            -128 to 127.
            </summary>
        </member>
        <member name="F:OsSql.OsSqlTypes.ColumnType.SmallInt">
            <summary>
            -32768 to 32767.
            </summary>
        </member>
        <member name="F:OsSql.OsSqlTypes.ColumnType.BigInt">
            <summary>
            -9223372036854775808 to 9223372036854775807
            </summary>
        </member>
        <member name="F:OsSql.OsSqlTypes.ColumnType.Varchar">
            <summary>
            Holds a variable length string (can contain letters, numbers, and special characters). The maximum size is specified in parenthesis. Can store up to 255 characters.
            </summary>
        </member>
        <member name="F:OsSql.OsSqlTypes.ColumnType.Text">
            <summary>
            Holds a string with a maximum length of 65,535 characters.
            </summary>
        </member>
        <member name="F:OsSql.OsSqlTypes.ColumnType.TinyText">
            <summary>
            Holds a string with a maximum length of 255 characters.
            </summary>
        </member>
        <member name="F:OsSql.OsSqlTypes.ColumnType.MediumText">
            <summary>
            Holds a string with a maximum length of 16,777,215 characters.
            </summary>
        </member>
        <member name="F:OsSql.OsSqlTypes.ColumnType.LongText">
            <summary>
            Holds a string with a maximum length of 4,294,967,295 characters.
            </summary>
        </member>
        <member name="F:OsSql.OsSqlTypes.ColumnType.Float">
            <summary>
            A small number with a floating decimal point.
            </summary>
        </member>
        <member name="F:OsSql.OsSqlTypes.ColumnType.Double">
            <summary>
            A large number with a floating decimal point.
            </summary>
        </member>
        <member name="F:OsSql.OsSqlTypes.ColumnType.Decimal">
            <summary>
            A DOUBLE stored as a string, allowing for a fixed decimal point.
            </summary>
        </member>
        <member name="F:OsSql.OsSqlTypes.ColumnType.DateTime">
            <summary>
            A date and time, saved as int (unix time).
            </summary>
        </member>
        <member name="F:OsSql.OsSqlTypes.ColumnType.Boolean">
            <summary>
            A boolean value.
            </summary>
        </member>
        <member name="F:OsSql.OsSqlTypes.ColumnType.Enum">
            <summary>
            An enum property, saved as int (based on hash code).
            </summary>
        </member>
        <member name="F:OsSql.OsSqlTypes.ColumnType.Object">
            <summary>
            An object, saved as string (Json).
            </summary>
        </member>
        <member name="F:OsSql.OsSqlTypes.ColumnType.Element">
            <summary>
            An IOsSqlElement type, saved as int (based on Save() function).
            </summary>
        </member>
        <member name="T:OsSql.OsSqlTypes.Table">
            <summary>
            Table class handles a single table in a structure.
            </summary>
        </member>
        <member name="T:OsSql.OsSqlTypes.Table.Column">
            <summary>
            Represents a single table column (field).
            </summary>
        </member>
        <member name="F:OsSql.OsSqlTypes.Table.Column.CodeName">
            <summary>
            Property name of the column.
            </summary>
        </member>
        <member name="F:OsSql.OsSqlTypes.Table.Column.DbName">
            <summary>
            Database name of the column.
            </summary>
        </member>
        <member name="F:OsSql.OsSqlTypes.Table.Column.ColType">
            <summary>
            Database column type.
            </summary>
        </member>
        <member name="F:OsSql.OsSqlTypes.Table.Column.AutoInc">
            <summary>
            Auto increment.
            </summary>
        </member>
        <member name="M:OsSql.OsSqlTypes.Table.Column.#ctor(OsSql.OsSqlTypes.ColumnType,System.String,System.String,System.Boolean)">
            <summary>
            Construct a new column instance.
            </summary>
            <param name="type">Type of the value as <c>ColumnType</c>.</param>
            <param name="sql">Column name to be set in the database.</param>
            <param name="code">Exact name of the property in the code.</param>
            <param name="autoInc">Indicates if this column is defined as auto increment.</param>
        </member>
        <member name="F:OsSql.OsSqlTypes.Table.Name">
            <summary>
            Table name.
            </summary>
        </member>
        <member name="F:OsSql.OsSqlTypes.Table.DBName">
            <summary>
            Database name.
            </summary>
        </member>
        <member name="F:OsSql.OsSqlTypes.Table.Columns">
            <summary>
            List of table columns (fields).
            </summary>
        </member>
        <member name="M:OsSql.OsSqlTypes.Table.#ctor(System.String,System.String)">
            <summary>
            Constructs a new instance of <c>Table</c> without any columns.
            </summary>
            <param name="name">Table name.</param>
            <param name="dbname">Database name.</param>
        </member>
        <member name="M:OsSql.OsSqlTypes.Table.#ctor(System.String,OsSql.OsSqlTypes.Table.Column[])">
            <summary>
            Constructs a new instance of <c>Table</c> without any columns.
            </summary>
            <param name="name">Table name.</param>
            <param name="columns">Columns to add.</param>
        </member>
        <member name="M:OsSql.OsSqlTypes.Table.AddColumn(OsSql.OsSqlTypes.ColumnType,System.String,System.String,System.Boolean)">
            <summary>
            Adds a new column (field) to the table.
            </summary>
            <param name="type">Type of the value as <c>ColumnType</c>.</param>
            <param name="sql">Column name to be set in the database.</param>
            <param name="code">Exact name of the property in the code.</param>
            <param name="autoInc">Indicates if this column is defined as auto increment.</param>
        </member>
        <member name="M:OsSql.OsSqlTypes.Table.AddColumn(OsSql.OsSqlTypes.ColumnType,System.String,System.Boolean)">
            <summary>
            Adds a new column (field) to the table, with the same name of both database column and code property.
            </summary>
            <param name="type">Type of the value as <c>ColumnType</c>.</param>
            <param name="name">Exact name of the property in the code that is also the name in the database.</param>
            <param name="autoInc">Indicates if this column is defined as auto increment.</param>
        </member>
        <member name="M:OsSql.OsSqlTypes.Table.AddColumn(OsSql.OsSqlTypes.Table.Column)">
            <summary>
            Adds a new column (field) to the table using an <c>Column</c> instance.
            </summary>
            <param name="c">The <c>Column</c> instance.</param>
        </member>
        <member name="M:OsSql.OsSqlTypes.Table.FindD(System.String)">
            <summary>
            Finds a column by its database column name.
            </summary>
            <param name="name">The exact database column name.</param>
            <returns>The column instance or null if nothing found.</returns>
        </member>
        <member name="M:OsSql.OsSqlTypes.Table.FindC(System.String)">
            <summary>
            Finds a column by its property code name.
            </summary>
            <param name="name">The exact property code name.</param>
            <returns>The column instance or null if nothing found.</returns>
        </member>
        <member name="M:OsSql.OsSqlTypes.Table.AddColumnsByClassProperties(System.Type)">
            <summary>
            Adds all of the class properties as columns to the table.
            Column names will be the same as code names.
            </summary>
            <param name="classType">Type of the source class.</param>
        </member>
        <member name="M:OsSql.OsSqlTypes.Table.AddColumnsByAttributes(System.Type)">
            <summary>
            Adds all of the class properties that are marked with <c>OsSqlSaveAttribute</c> as columns to the table.
            </summary>
            <param name="classType">Type of the source class.</param>
        </member>
        <member name="M:OsSql.OsSqlTypes.Table.ToString">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:OsSql.OsSqlDebugger">
            <summary>
            Handles the internal debugger of OsSql.
            </summary>
        </member>
        <member name="T:OsSql.OsSqlDebugger.OsSqlDebugType">
            <summary>
            Types of OsSql debug messages.
            </summary>
        </member>
        <member name="F:OsSql.OsSqlDebugger.OsSqlDebugType.Info">
            <summary>
            Information message.
            </summary>
        </member>
        <member name="F:OsSql.OsSqlDebugger.OsSqlDebugType.Error">
            <summary>
            Error message.
            </summary>
        </member>
        <member name="F:OsSql.OsSqlDebugger.OsSqlDebugType.Queries">
            <summary>
            Query debugging.
            </summary>
        </member>
        <member name="T:OsSql.OsSqlDebugger.DebugDelegate">
            <summary>
            Event handler for debug messages.
            </summary>
            <param name="type">Message type.</param>
            <param name="message">Message content.</param>
        </member>
        <member name="E:OsSql.OsSqlDebugger.OnOsSqlDebugMessage">
            <summary>
            An event used to trace OsSql debug messages.
            </summary>
        </member>
        <member name="E:OsSql.OsSqlDebugger.OnOsSqlQuery">
            <summary>
            An event used to trace OsSql queries.
            </summary>
        </member>
        <member name="M:OsSql.OsSqlDebugger.Message(System.String)">
            <summary>
            Sends a debug information message.
            </summary>
            <param name="msg">The message content.</param>
        </member>
        <member name="M:OsSql.OsSqlDebugger.Error(System.String)">
            <summary>
            Sends a debug error message.
            </summary>
            <param name="msg">The message content.</param>
        </member>
        <member name="M:OsSql.OsSqlDebugger.Query(MySql.Data.MySqlClient.MySqlCommand)">
            <summary>
            Query debug.
            </summary>
            <param name="cmd">The query command object.</param>
        </member>
        <member name="T:OsSql.SQL">
            <summary>
            SQL class allows to handle the MySQL database.
            </summary>
        </member>
        <member name="F:OsSql.SQL.Connection">
            <summary>
            Represents a connection to an SQL server database.
            </summary>
        </member>
        <member name="F:OsSql.SQL.ConnectionDetails">
            <summary>
            Represents the connection details.
            </summary>
        </member>
        <member name="M:OsSql.SQL.#ctor(System.String,System.String,System.String,System.String)">
            <summary>
            Constructs a new SQL instance.
            </summary>
            <param name="server">The server IP address or host name.</param>
            <param name="database">The database name.</param>
            <param name="uid">The login username.</param>
            <param name="passwd">The login password</param>
        </member>
        <member name="M:OsSql.SQL.Connect">
            <summary>
            Creates a direct connection for the purpose of reading and writing to the database.
            </summary>
        </member>
        <member name="M:OsSql.SQL.Disconnect">
            <summary>
            Closes the connection to the database.
            </summary>
        </member>
        <member name="M:OsSql.SQL.Query(System.String,OsSql.OsSqlTypes.Parameter[])">
            <summary>
            Sends a query to the database.
            </summary>
            <param name="query">The command content.</param>
            <param name="parameters">Parameters to pass with the query.</param>
        </member>
        <member name="M:OsSql.SQL.Condition(System.String)">
            <summary>
            Condition format for queries.
            </summary>
            <param name="condition">Condition SQL code.</param>
            <returns>The formatted string.</returns>
            <remarks>Yeah, we're that lazy.</remarks>
        </member>
        <member name="M:OsSql.SQL.Select(System.String,System.String,System.String,OsSql.OsSqlTypes.Parameter[])">
            <summary>
            Select statement for SQL.
            </summary>
            <param name="table">Table name.</param>
            <param name="condition">Condition code.</param>
            <param name="key">Keys to select.</param>
            <param name="conditionparams">Parameters to pass with the condition and key.</param>
            <returns>A list of Dictionary elements based on the data.</returns>
        </member>
        <member name="M:OsSql.SQL.Select(OsSql.OsSqlTypes.Table,System.String,System.String,OsSql.OsSqlTypes.Parameter[])">
            <summary>
            Select statement for SQL.
            </summary>
            <param name="table">Table object.</param>
            <param name="condition">Condition code.</param>
            <param name="key">Keys to select.</param>
            <param name="conditionparams">Parameters to pass with the condition and key.</param>
            <returns>A list of Dictionary elements based on the data.</returns>
        </member>
        <member name="M:OsSql.SQL.Read(System.String,System.String,System.String,OsSql.OsSqlTypes.Parameter[])">
            <summary>
            Select statement for SQL based on a new instance of DataTable.
            </summary>
            <param name="table">Table name.</param>
            <param name="condition">Condition code.</param>
            <param name="key">Key to select.</param>
            <param name="conditionparams">Parameters to pass with the condition.</param>
            <returns>The new DataTable.</returns>
        </member>
        <member name="M:OsSql.SQL.Read(OsSql.OsSqlTypes.Table,System.String,System.String,OsSql.OsSqlTypes.Parameter[])">
            <summary>
            Select statement for SQL based on a new instance of DataTable.
            </summary>
            <param name="table">Table object.</param>
            <param name="condition">Condition code.</param>
            <param name="key">Key to select.</param>
            <param name="conditionparams">Parameters to pass with the condition.</param>
            <returns>The new DataTable.</returns>
        </member>
        <member name="M:OsSql.SQL.Read(System.Data.DataSet@,System.String,System.String,System.String,OsSql.OsSqlTypes.Parameter[])">
            <summary>
            Select statement for SQL based on an existing instance of DataSet and a new instance of DataTable.
            </summary>
            <param name="ds">Reference to DataSet element to set the data in.</param>
            <param name="table">Table name.</param>
            <param name="condition">Condition code.</param>
            <param name="key">Key to select.</param>
            <param name="conditionparams">Parameters to pass with the condition.</param>
            <returns>The new DataTable.</returns>
        </member>
        <member name="M:OsSql.SQL.Read(System.Data.DataSet@,OsSql.OsSqlTypes.Table,System.String,System.String,OsSql.OsSqlTypes.Parameter[])">
            <summary>
            Select statement for SQL based on an existing instance of DataSet and a new instance of DataTable.
            </summary>
            <param name="ds">Reference to DataSet element to set the data in.</param>
            <param name="table">Table object.</param>
            <param name="condition">Condition code.</param>
            <param name="key">Key to select.</param>
            <param name="conditionparams">Parameters to pass with the condition.</param>
            <returns>The new DataTable.</returns>
        </member>
        <member name="M:OsSql.SQL.Update(System.String,System.String,OsSql.OsSqlTypes.Parameter[])">
            <summary>
            Updates the database.
            </summary>
            <param name="table">Table name.</param>
            <param name="condition">Condition code.</param>
            <param name="parameters">List of keys and values to update. Only parameters with <c>function</c> set to <c>true</c> will be updated.</param>
        </member>
        <member name="M:OsSql.SQL.Update(OsSql.OsSqlTypes.Table,System.String,OsSql.OsSqlTypes.Parameter[])">
            <summary>
            Updates the database.
            </summary>
            <param name="table">Table object.</param>
            <param name="condition">Condition code.</param>
            <param name="parameters">List of keys and values to update. Only parameters with <c>function</c> set to <c>true</c> will be updated.</param>
        </member>
        <member name="M:OsSql.SQL.Count(System.String,System.String,OsSql.OsSqlTypes.Parameter[])">
            <summary>
            Returns the number of rows based on a condition.
            </summary>
            <param name="table">Table name.</param>
            <param name="condition">Condition code.</param>
            <param name="conditionparams">Parameters to pass with the condition.</param>
            <returns>The count.</returns>
        </member>
        <member name="M:OsSql.SQL.Count(OsSql.OsSqlTypes.Table,System.String,OsSql.OsSqlTypes.Parameter[])">
            <summary>
            Returns the number of rows based on a condition.
            </summary>
            <param name="table">Table object.</param>
            <param name="condition">Condition code.</param>
            <param name="conditionparams">Parameters to pass with the condition.</param>
            <returns>The count.</returns>
        </member>
        <member name="M:OsSql.SQL.Insert(System.String,OsSql.OsSqlTypes.Parameter[])">
            <summary>
            Adds a new entry to the table.
            </summary>
            <param name="table">Table name.</param>
            <param name="parameters">List of keys and values to insert. Only parameters with <c>function</c> set to <c>true</c> will be inserted.</param>
        </member>
        <member name="M:OsSql.SQL.Insert(OsSql.OsSqlTypes.Table,OsSql.OsSqlTypes.Parameter[])">
            <summary>
            Adds a new entry to the table.
            </summary>
            <param name="table">Table object.</param>
            <param name="parameters">List of keys and values to insert. Only parameters with <c>function</c> set to <c>true</c> will be inserted.</param>
        </member>
        <member name="M:OsSql.SQL.Delete(System.String,System.String,OsSql.OsSqlTypes.Parameter[])">
            <summary>
            Deletes a row from the table.
            </summary>
            <param name="table">Table name.</param>
            <param name="condition">Condition code.</param>
            <param name="conditionparams">Parameters to pass with the condition.</param>
        </member>
        <member name="M:OsSql.SQL.Delete(OsSql.OsSqlTypes.Table,System.String,OsSql.OsSqlTypes.Parameter[])">
            <summary>
            Deletes a row from the table.
            </summary>
            <param name="table">Table object.</param>
            <param name="condition">Condition code.</param>
            <param name="conditionparams">Parameters to pass with the condition.</param>
        </member>
        <member name="M:OsSql.SQL.IsColumnExists(System.String,System.String)">
            <summary>
            Checks if column exists in a table.
            </summary>
            <param name="table">Table name.</param>
            <param name="column">Column name.</param>
            <returns>True if the column exists, false otherwise.</returns>
        </member>
        <member name="M:OsSql.SQL.AddColumn(System.String,OsSql.OsSqlTypes.ColumnType,System.String,System.Boolean)">
            <summary>
            Adds a new column to a table.
            </summary>
            <param name="table">Table name.</param>
            <param name="type">Column type.</param>
            <param name="column">Column name.</param>
            <param name="ai">Auto increment.</param>
        </member>
        <member name="M:OsSql.SQL.DropColumn(System.String,System.String)">
            <summary>
            Deletes a column from a table.
            </summary>
            <param name="table">Table name.</param>
            <param name="column">Column name.</param>
        </member>
        <member name="M:OsSql.SQL.UpdateColumns(OsSql.OsSqlTypes.Table,System.String,System.Boolean)">
            <summary>
            Updates the table columns in database to match the table that defined in the code.
            </summary>
            <param name="table">Table object.</param>
            <param name="sqlname">SQL table name, use empty string to set the same as the <c>table</c> name.</param>
            <param name="delete">Use true to delete any unrelevant columns found while updating. Note that this will delete both the columns and their rows.</param>
        </member>
        <member name="M:OsSql.SQL.UpdateStructure(OsSql.OsSqlTypes.Structure,System.Boolean,System.Boolean)">
            <summary>
            Updates the database tables columns to match the tables that defined in a specific structure.
            </summary>
            <param name="structure">Structure object.</param>
            <param name="updateTables">Use true if you want to also create any missing tables.</param>
            <param name="delete">Use true to delete any unrelevant columns found while updating. Note that this will delete both the columns and their rows.</param>
        </member>
        <member name="M:OsSql.SQL.AutoUpdate(System.Object,OsSql.OsSqlTypes.Table,System.String,System.String,System.Boolean,OsSql.OsSqlTypes.Parameter[])">
            <summary>
            Auto-updates database rows.
            This means that any existing data within a <c>classPointer</c> will be updated in the database.
            </summary>
            <param name="classPointer">Pointer to an object that needs to be updated in the database</param>
            <param name="table">Table object that contains the columns that needs to be updated.</param>
            <param name="condition">Condition of the update.</param>
            <param name="name">Table name in database. Leave blank if it's the same as <c>table.Name</c>.</param>
            <param name="conditionparams">Parameters to pass with the condition.</param>
            <param name="skipnull">Use true to skip any property that is equal to null so the query won't contain it.</param>
        </member>
        <member name="M:OsSql.SQL.AutoInsert(System.Object,OsSql.OsSqlTypes.Table,System.String,System.Boolean)">
            <summary>
            Auto-inserts database row.
            This means that any existing data within a <c>classPointer</c> will be inserted to the database.
            </summary>
            <param name="classPointer">Pointer to an object that needs to be inserted to the database</param>
            <param name="table">Table object that contains the columns that needs to be inserted.</param>
            <param name="name">Table name in database. Leave blank if it's the same as <c>table.Name</c>.</param>
            <param name="skipnull">Use true to skip any property that is equal to null so the query won't contain it.</param>
        </member>
        <member name="M:OsSql.SQL.AutoSelect(OsSql.OsSqlTypes.Table,System.String,System.String,OsSql.OsSqlTypes.Parameter[])">
            <summary>
            Auto-reads from the database based on the synchronized table parameter.
            This is just a regular select statement, filtered only with fields that are both in the class and in the database.
            </summary>
            <param name="table">Table object that contains the columns that needs to be selected.</param>
            <param name="condition">Select condition.</param>
            <param name="name">Table name in database. Leave blank if it's the same as <c>table.Name</c>.</param>
            <param name="conditionparams">Parameters to pass with the condition.</param>
        </member>
        <member name="M:OsSql.SQL.AutoLoad``1(OsSql.OsSqlTypes.Table,System.String,System.Collections.Generic.Dictionary{OsSql.OsSqlTypes.Table.Column,System.Object}@,System.String,OsSql.OsSqlTypes.Parameter[])">
            <summary>
            Auto-reads from the database based on the synchronized table parameter, then loads all of the data to a new constructed instance of the specified class type.
            Any custom proprety type in the code is skipped. Only properties defined in the table parameter gets set.
            </summary>
            <typeparam name="T">The type to create the instance from.</typeparam>
            <param name="table">Table object that contains the columns that needs to be loaded.</param>
            <param name="condition">Select condition.</param>
            <param name="data">Any data loaded from the database, including skipped columns.</param>
            <param name="name">Table name in database. Leave blank if it's the same as <c>table.Name</c>.</param>
            <param name="conditionparams">Parameters to pass with the condition.</param>
            <returns>The object with the loaded</returns>
        </member>
        <member name="T:OsSql.Builder">
            <summary>
            Builder class contains SQL query construction methods.
            </summary>
        </member>
        <member name="M:OsSql.Builder.ListAllClassValues(System.Object,OsSql.OsSqlTypes.Table,System.String,System.Boolean)">
            <summary>
            Creates a list of <c>OsSqlTypes.Parameter</c> of all class properties in order to manipulate data (insert/update).
            </summary>
            <param name="classPointer">The source class object to get the property values from.</param>
            <param name="table">The table with the defined columns in order to tell which properties to get.</param>
            <param name="name">Table name in the database, leave blank for the name to be the same as the class name.</param>
            <param name="skipnull">Use true to skip properties that their values are null.</param>
            <returns>Returns array with all key and value parameters based on the class object properties.</returns>
        </member>
        <member name="M:OsSql.Builder.GetObject(System.Object,System.Nullable{OsSql.OsSqlTypes.ColumnType},System.Boolean,System.Boolean@,System.Type)">
            <summary>
            Gets an object value with its relevant type.
            </summary>
            <param name="content">Value content of the object.</param>
            <param name="type">Known type.</param>
            <param name="save">Use true to save value or false to load value.</param>
            <param name="success">Value saying if the conversion successed.</param>
            <param name="pt">Property type.</param>
            <returns>The object with its relevant type, or null if the type is not supported.</returns>
        </member>
        <member name="M:OsSql.Builder.TextValue(System.String,System.Boolean)">
            <summary>
            Replaces quotes with double-quotes.
            </summary>
            <param name="value">Text value.</param>
            <param name="reverse">True if the operation should be reversed, meaning double-quotes will become quotes.</param>
            <returns>The modified text value.</returns>
        </member>
        <member name="M:OsSql.Builder.GetCreationQuery(System.Collections.Generic.ICollection{OsSql.OsSqlTypes.Table})">
            <summary>
            Generates a full database creation query based on a collection of tables.
            </summary>
            <param name="list">Collection of tables.</param>
            <returns>The creation query string.</returns>
        </member>
        <member name="M:OsSql.Builder.ColTypeSQLTitle(OsSql.OsSqlTypes.ColumnType)">
            <summary>
            Gets the SQL column type name based on <c>ColumnType</c> element.
            </summary>
            <param name="type">The column type.</param>
            <returns>The title.</returns>
        </member>
        <member name="M:OsSql.Builder.GetCreationQuery(OsSql.OsSqlTypes.Structure)">
            <summary>
            Generates a full database creaton query based on a <c>Structure</c> object.
            </summary>
            <param name="structure">The <c>Structure</c> object.</param>
            <returns>The creation query string.</returns>
        </member>
        <member name="M:OsSql.Builder.GetCreationQuery(OsSql.OsSqlTypes.Table[])">
            <summary>
            Generates a full database creaton query based on specified tables.
            </summary>
            <param name="list">The tables.</param>
            <returns>The creation query.</returns>
        </member>
        <member name="M:OsSql.Builder.ColumnTypeFromObjectType(System.Type)">
            <summary>
            Gets a <c>ColumnType</c> of object by its type.
            </summary>
            <param name="type">The object type.</param>
            <returns>The relevant <c>ColumnType</c> (default is Int).</returns>
        </member>
        <member name="T:OsSql.Timestamp">
            <summary>
            Timestamp class handles conversion between unix time and DateTime.
            </summary>
        </member>
        <member name="M:OsSql.Timestamp.UnixTimeFromDateTime(System.DateTime)">
            <summary>
            Converts a DateTime object to a unix time int value.
            </summary>
            <param name="datetime">DateTime object.</param>
            <returns>Returns int value that represents a unix time.</returns>
        </member>
        <member name="M:OsSql.Timestamp.DateTimeFromUnixTime(System.Int32)">
            <summary>
            Converts a unix time to a DateTime object.
            </summary>
            <param name="unixtime">The unix time int value.</param>
            <returns>DateTime object.</returns>
        </member>
    </members>
</doc>
